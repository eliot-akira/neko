# Makefile generated by imake - do not edit!
# $XConsortium: imake.c,v 1.65 91/07/25 17:50:17 rws Exp $

# -------------------------------------------------------------------------
# Makefile generated from "Imake.tmpl" and </tmp/IIf.001524>
# $Header: /home/x_cvs/mit/config/Imake.tmpl,v 1.7 1992/09/17 10:41:37 dawes Exp $
# $XConsortium: Imake.tmpl,v 1.139 91/09/16 08:52:48 rws Exp $
#
# Platform-specific parameters may be set in the appropriate <vendor>.cf
# configuration files.  Site-specific parameters should be set in the file
# site.def.  Full rebuilds are recommended if any parameters are changed.
#
# If your C preprocessor does not define any unique symbols, you will need
# to set BOOTSTRAPCFLAGS when rebuilding imake (usually when doing
# "make World" the first time).
#

# -------------------------------------------------------------------------
# site-specific configuration parameters that need to come before
# the platform-specific parameters - edit site.def to change

# $Header: /home/x_cvs/mit/config/site.def,v 1.35 1992/09/26 17:39:58 dawes Exp $
# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

# -------------------------------------------------------------------------
# platform-specific configuration parameters - edit x386.cf to change

# $Header: /home/x_cvs/mit/config/x386.cf,v 1.42 1992/09/26 17:40:01 dawes Exp $
# platform:  $XConsortium: x386.cf,v 1.7 91/08/16 19:30:10 gildea Exp $

# operating system:  		386BSD

# -------------------------------------------------------------------------
# site-specific configuration parameters that go after
# the platform-specific parameters - edit site.def to change

# $Header: /home/x_cvs/mit/config/site.def,v 1.35 1992/09/26 17:39:58 dawes Exp $
# site:  $XConsortium: site.def,v 1.2 91/07/30 20:26:44 rws Exp $

            SHELL = 	/bin/sh

              TOP = .
      CURRENT_DIR = .

               AR = ar clq
  BOOTSTRAPCFLAGS =
               CC = 		gcc
               AS = as

         COMPRESS = compress
              CPP = 		/usr/libexec/cpp $(STD_CPP_DEFINES)
    PREPROCESSCMD = 		gcc -E $(STD_CPP_DEFINES)
          INSTALL = install
               LD = ld
             LINT = lint
      LINTLIBFLAG = -C
         LINTOPTS = -axz
               LN = ln -s
             MAKE = make
               MV = mv
               CP = cp

           RANLIB = ranlib
  RANLIBINSTFLAGS =

               RM = rm -f
            TROFF = psroff
         MSMACROS = -ms
              TBL = tbl
              EQN = eqn
     STD_INCLUDES =
  STD_CPP_DEFINES = -traditional
      STD_DEFINES =
 EXTRA_LOAD_FLAGS =
  EXTRA_LIBRARIES =
             TAGS = ctags

    PROTO_DEFINES =

     INSTPGMFLAGS = -s

     INSTBINFLAGS = -m 0755
     INSTUIDFLAGS = -m 4755
     INSTLIBFLAGS = -m 0644
     INSTINCFLAGS = -m 0444
     INSTMANFLAGS = -m 0444
     INSTDATFLAGS = -m 0444
    INSTKMEMFLAGS = -m 4755

      PROJECTROOT = 	/usr/X386

     TOP_INCLUDES = -I$(INCROOT)

      CDEBUGFLAGS = -O -fstrength-reduce
        CCOPTIONS =
    ANSICCOPTIONS =

      ALLINCLUDES = $(INCLUDES) $(EXTRA_INCLUDES) $(TOP_INCLUDES) $(STD_INCLUDES)
       ALLDEFINES = $(ALLINCLUDES) $(STD_DEFINES) $(EXTRA_DEFINES) $(PROTO_DEFINES) $(DEFINES)
           CFLAGS = $(ANSICCOPTIONS) $(CDEBUGFLAGS) $(CCOPTIONS) $(ALLDEFINES)
        LINTFLAGS = $(LINTOPTS) -DLINT $(ALLDEFINES)

           LDLIBS = $(SYS_LIBRARIES) $(EXTRA_LIBRARIES)

        LDOPTIONS = $(ANSICCOPTIONS) $(CDEBUGFLAGS) $(CCOPTIONS) $(LOCAL_LDFLAGS) -L$(USRLIBDIR)

   LDCOMBINEFLAGS = -X -r
      DEPENDFLAGS =

        MACROFILE = x386.cf
           RM_CMD = $(RM) *.CKP *.ln *.BAK *.bak *.o core errs ,* *~ *.a .emacs_* tags TAGS make.log MakeOut

    IMAKE_DEFINES =

         IRULESRC = $(CONFIGDIR)
        IMAKE_CMD = $(IMAKE) -DUseInstalled -I$(IRULESRC) $(IMAKE_DEFINES)

     ICONFIGFILES = $(IRULESRC)/Imake.tmpl $(IRULESRC)/Imake.rules 			$(IRULESRC)/Project.tmpl $(IRULESRC)/site.def 			$(IRULESRC)/$(MACROFILE) $(EXTRA_ICONFIGFILES)

# -------------------------------------------------------------------------
# $Header: /home/x_cvs/mit/config/Project.tmpl,v 1.6 1992/09/01 12:37:21 dawes Exp $
# X Window System Build Parameters
# $XConsortium: Project.tmpl,v 1.138 91/09/10 09:02:12 rws Exp $

# -------------------------------------------------------------------------
# X Window System make variables; this need to be coordinated with rules

          PATHSEP = /
        USRLIBDIR = 	/usr/X386/lib
           BINDIR = 	/usr/X386/bin
          INCROOT = 	/usr/X386/include
     BUILDINCROOT = $(TOP)
      BUILDINCDIR = $(BUILDINCROOT)/X11
      BUILDINCTOP = ..
           INCDIR = $(INCROOT)/X11
           ADMDIR = /usr/adm
           LIBDIR = $(USRLIBDIR)/X11
        CONFIGDIR = $(LIBDIR)/config
       LINTLIBDIR = $(USRLIBDIR)/lint

          FONTDIR = $(LIBDIR)/fonts
         XINITDIR = $(LIBDIR)/xinit
           XDMDIR = $(LIBDIR)/xdm
           TWMDIR = $(LIBDIR)/twm
          MANPATH = 	/usr/X386/man
    MANSOURCEPATH = 	$(MANPATH)/cat
        MANSUFFIX = 1x
     LIBMANSUFFIX = 3x
           MANDIR = 	$(MANSOURCEPATH)1
        LIBMANDIR = $(MANSOURCEPATH)3
           NLSDIR = $(LIBDIR)/nls
        PEXAPIDIR = $(LIBDIR)/PEX
      XAPPLOADDIR = $(LIBDIR)/app-defaults
       FONTCFLAGS = -t
       LINKKITDIR = 	$(USRLIBDIR)/Server

     INSTAPPFLAGS = $(INSTDATFLAGS)

            IMAKE = imake
           DEPEND = makedepend
              RGB = rgb

            FONTC = bdftopcf

        MKFONTDIR = mkfontdir
        MKDIRHIER = 	/bin/sh $(BINDIR)/mkdirhier

        CONFIGSRC = $(TOP)/config
       DOCUTILSRC = $(TOP)/doc/util
        CLIENTSRC = $(TOP)/clients
          DEMOSRC = $(TOP)/demos
           LIBSRC = $(TOP)/lib
          FONTSRC = $(TOP)/fonts
       INCLUDESRC = $(TOP)/X11
        SERVERSRC = $(TOP)/server
          UTILSRC = $(TOP)/util
        SCRIPTSRC = $(UTILSRC)/scripts
       EXAMPLESRC = $(TOP)/examples
       CONTRIBSRC = $(TOP)/../contrib
           DOCSRC = $(TOP)/doc
           RGBSRC = $(TOP)/rgb
        DEPENDSRC = $(UTILSRC)/makedepend
         IMAKESRC = $(CONFIGSRC)
         XAUTHSRC = $(LIBSRC)/Xau
          XLIBSRC = $(LIBSRC)/X
           XMUSRC = $(LIBSRC)/Xmu
       TOOLKITSRC = $(LIBSRC)/Xt
       AWIDGETSRC = $(LIBSRC)/Xaw
       OLDXLIBSRC = $(LIBSRC)/oldX
      XDMCPLIBSRC = $(LIBSRC)/Xdmcp
      BDFTOSNFSRC = $(FONTSRC)/bdftosnf
      BDFTOSNFSRC = $(FONTSRC)/clients/bdftosnf
      BDFTOPCFSRC = $(FONTSRC)/clients/bdftopcf
     MKFONTDIRSRC = $(FONTSRC)/clients/mkfontdir
         FSLIBSRC = $(FONTSRC)/lib/fs
    FONTSERVERSRC = $(FONTSRC)/server
     EXTENSIONSRC = $(TOP)/extensions
         XILIBSRC = $(EXTENSIONSRC)/lib/xinput
      PHIGSLIBSRC = $(EXTENSIONSRC)/lib/PEX

  DEPEXTENSIONLIB = $(USRLIBDIR)/libXext.a
     EXTENSIONLIB = 			 -lXext

          DEPXLIB = $(DEPEXTENSIONLIB) $(USRLIBDIR)/libX11.a
             XLIB = $(EXTENSIONLIB) 			 -lX11

      DEPXAUTHLIB = $(USRLIBDIR)/libXau.a
         XAUTHLIB = 			 -lXau
      DEPXDMCPLIB = $(USRLIBDIR)/libXdmcp.a
         XDMCPLIB = 			 -lXdmcp

        DEPXMULIB = $(USRLIBDIR)/libXmu.a
           XMULIB = 			 -lXmu

       DEPOLDXLIB = $(USRLIBDIR)/liboldX.a
          OLDXLIB = 			 -loldX

      DEPXTOOLLIB = $(USRLIBDIR)/libXt.a
         XTOOLLIB = 			 -lXt

        DEPXAWLIB = $(USRLIBDIR)/libXaw.a
           XAWLIB = 			 -lXaw

        DEPXILIB = $(USRLIBDIR)/libXi.a
           XILIB = 			 -lXi

        DEPPHIGSLIB = $(USRLIBDIR)/libphigs.a
           PHIGSLIB = 			 -lphigs

       DEPXBSDLIB = $(USRLIBDIR)/libXbsd.a
          XBSDLIB = 			 -lXbsd

 LINTEXTENSIONLIB = $(LINTLIBDIR)/llib-lXext.ln
         LINTXLIB = $(LINTLIBDIR)/llib-lX11.ln
          LINTXMU = $(LINTLIBDIR)/llib-lXmu.ln
        LINTXTOOL = $(LINTLIBDIR)/llib-lXt.ln
          LINTXAW = $(LINTLIBDIR)/llib-lXaw.ln
           LINTXI = $(LINTLIBDIR)/llib-lXi.ln
        LINTPHIGS = $(LINTLIBDIR)/llib-lphigs.ln

          DEPLIBS = $(DEPXAWLIB) $(DEPXMULIB) $(DEPXTOOLLIB) $(DEPXLIB)

         DEPLIBS1 = $(DEPLIBS)
         DEPLIBS2 = $(DEPLIBS)
         DEPLIBS3 = $(DEPLIBS)

# -------------------------------------------------------------------------
# Imake rules for building libraries, programs, scripts, and data files
# $Header: /home/x_cvs/mit/config/Imake.rules,v 1.6 1992/09/30 13:45:46 dawes Exp $
# rules:  $XConsortium: Imake.rules,v 1.123 91/09/16 20:12:16 rws Exp $

# -------------------------------------------------------------------------
# start of Imakefile

# $Id: Imakefile,v 1.16 1992/03/17 14:08:41 kato Exp kato $

    ONEKOLIBDIR = $(LIBDIR)/oneko
        BMFILES = bitmaps/\*.xbm
          BMDIR = $(ONEKOLIBDIR)/oneko
   TORA_BMFILES = bitmaps.tora/\*.xbm
     TORA_BMDIR = $(ONEKOLIBDIR)/tora
  KOTATSUCURSOR = kotatsu.xbm kotatsu_mask.xbm
     POSTCURSOR = post.xbm post_mask.xbm
    MOUSECURSOR = cursor.xbm cursor_mask.xbm
    CURSORFILES = $(KOTATSUCURSOR) $(POSTCURSOR) $(MOUSECURSOR)
       HELPFILE = help

LOCAL_LIBRARIES = $(XMULIB) $(XLIB)
  SYS_LIBRARIES = -lm
        DEPLIBS = $(DEPXLIB)
    CDEBUGFLAGS = -g
        DEFINES = -DSHAPE -DONEKODIR=\"$(ONEKOLIBDIR)\" -DLIBDIR=\"$(LIBDIR)\"
#       DEFINES = -DONEKODIR=\"$(ONEKOLIBDIR)\" -DLIBDIR=\"$(LIBDIR)\"
           SRCS = oneko.c event.c init.c mail.c resource.c state.c
           OBJS = oneko.o event.o init.o mail.o resource.o state.o

 PROGRAM = oneko

all:: oneko

oneko: $(OBJS) $(DEPLIBS)
	$(RM) $@
	$(CC) -o $@ $(OBJS) $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS) $(EXTRA_LOAD_FLAGS)

install:: oneko
	@if [ -d $(DESTDIR)$(BINDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BINDIR)); fi
	$(INSTALL) -c $(INSTPGMFLAGS)  oneko $(DESTDIR)$(BINDIR)

install.man:: oneko.man
	@if [ -d $(DESTDIR)$(MANDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(MANDIR)); fi
	$(RM) $(DESTDIR)$(MANDIR)/oneko.0
	cat oneko.man | eqn | tbl | nroff -man >/tmp/oneko.man
	$(INSTALL) -c $(INSTMANFLAGS) /tmp/oneko.man $(DESTDIR)$(MANDIR)/oneko.0
	$(RM) /tmp/oneko.man

depend::
	$(DEPEND) $(DEPENDFLAGS) -s "# DO NOT DELETE" -- $(ALLDEFINES) -- $(SRCS)

lint:
	$(LINT) $(LINTFLAGS) $(SRCS) $(LINTLIBS)
lint1:
	$(LINT) $(LINTFLAGS) $(FILE) $(LINTLIBS)

clean::
	$(RM) $(PROGRAM)

Oneko.ad::  Oneko.cpp
	$(RM) $@
	$(CPP) -DOnekoLib=$(ONEKOLIBDIR) <Oneko.cpp | sed -e '/^#  *[0-9][0-9]*  *.*$$/d' -e '/^XCOMM$$/s//#/' -e '/^XCOMM[^a-zA-Z0-9_]/s/^XCOMM/#/' >$@

install:: $(BINDIR)/oneko
	$(RM) $(BINDIR)/tora
	$(LN) $(BINDIR)/oneko $(BINDIR)/tora

install:: $(HELPFILE)
	@if [ -d $(DESTDIR)$(ONEKOLIBDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(ONEKOLIBDIR)); fi
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in $(HELPFILE); do \
	(set -x; $(INSTALL) -c $(INSTDATFLAGS) $$i $(DESTDIR)$(ONEKOLIBDIR)); \
	done

install:: $(BMFILES)
	@if [ -d $(DESTDIR)$(BMDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(BMDIR)); fi
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in $(BMFILES); do \
	(set -x; $(INSTALL) -c $(INSTDATFLAGS) $$i $(DESTDIR)$(BMDIR)); \
	done

install:: $(TORA_BMFILES)
	@if [ -d $(DESTDIR)$(TORA_BMDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(TORA_BMDIR)); fi
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in $(TORA_BMFILES); do \
	(set -x; $(INSTALL) -c $(INSTDATFLAGS) $$i $(DESTDIR)$(TORA_BMDIR)); \
	done

install:: $(CURSORFILES)
	@if [ -d $(DESTDIR)$(ONEKOLIBDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(ONEKOLIBDIR)); fi
	@case '${MFLAGS}' in *[i]*) set +e;; esac; \
	for i in $(CURSORFILES); do \
	(set -x; $(INSTALL) -c $(INSTDATFLAGS) $$i $(DESTDIR)$(ONEKOLIBDIR)); \
	done

install:: Oneko.ad
	@if [ -d $(DESTDIR)$(XAPPLOADDIR) ]; then set +x; \
	else (set -x; $(MKDIRHIER) $(DESTDIR)$(XAPPLOADDIR)); fi
	$(INSTALL) -c $(INSTAPPFLAGS) Oneko.ad $(DESTDIR)$(XAPPLOADDIR)/Oneko

clean::
	$(RM) Oneko.ad
	$(RM) FLOW

# for debug.

restest: resource.o restest.o
	$(RM) $@
	$(CC) -o $@ resource.o restest.o $(LDOPTIONS) $(LOCAL_LIBRARIES) $(LDLIBS)  $(EXTRA_LOAD_FLAGS)

clean::
	$(RM) restest
FLOW: $(SRCS)
	cflow $(SRCS) | grep '	[A-WYZ]' > FLOW

# -------------------------------------------------------------------------
# common rules for all Makefiles - do not edit

emptyrule::

clean::
	$(RM_CMD) "#"*

Makefile::
	-@if [ -f Makefile ]; then set -x; \
	$(RM) Makefile.bak; $(MV) Makefile Makefile.bak; \
	else exit 0; fi
	$(IMAKE_CMD) -DTOPDIR=$(TOP) -DCURDIR=$(CURRENT_DIR)

tags::
	$(TAGS) -w *.[ch]
	$(TAGS) -xw *.[ch] > TAGS

# -------------------------------------------------------------------------
# empty rules for directories that do not have SUBDIRS - do not edit

install::
	@echo "install in $(CURRENT_DIR) done"

install.man::
	@echo "install.man in $(CURRENT_DIR) done"

install.linkkit::
	@echo "install.linkkit in $(CURRENT_DIR) done"

Makefiles::

includes::

# -------------------------------------------------------------------------
# dependencies generated by makedepend

